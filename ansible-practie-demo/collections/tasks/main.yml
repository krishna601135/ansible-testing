---
# tasks file for collections


#create a vpc
- name: create vpc over aws cloud
  amazon.aws.ec2_vpc_net:
    name: "{{vpc_name}}"
    cidr_block: "{{vpc_cidr}}"
    region: "{{region}}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    #enable dns support
    dns_support: yes
    tenancy: default
    state: present
  register: ec2_vpc_net_result




#create a internet gateway
- name: create internet gateway for vpc
  amazon.aws.ec2_vpc_igw:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    vpc_id: "{{ ec2_vpc_net_result.vpc.id }}"
    region: "{{ region }}"
    state: present
    tags:
      Name: "{{ igw_name }}"
  register: igw_result




#create public subnets
- name: Create subnet for public servers
  amazon.aws.ec2_vpc_subnet:
    state: present
    vpc_id: "{{ec2_vpc_net_result.vpc.id}}"
    region: "{{region}}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"  
    az: "{{item.zone}}"
    map_public: yes
    cidr: "{{item.cidr}}" 
    tags:
      Name: "{{item.name}}"
    loop:
      - '{zone: "ap-south-1a", name: "public-subnet-1a", cidr: "10.0.1.0/24"}'
      - '{zone: "ap-south-1b", name: "public-subnet-1b", cidr: "10.0.2.0/24"}'
  register: public_subnet_results

#create public route tables
- name: Set up public subnet route table
  amazon.aws.ec2_vpc_route_table:
    vpc_id: "{{ec2_vpc_net_result.vpc.id}}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    region: "{{item.region}}"
    tags:
      Name: Public
    subnets:
      - [ "{{ public_subnet_results.subnet.id }}" ]
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{igw_result.gateway_id}}"
  register: public_route_table


